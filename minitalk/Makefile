# Name of the executables
NAME_MC 	= client
NAME_MS 	= server
NAME_BC 	= client_bonus
NAME_BS		= server_bonus

# Compilation flags
CFLAGS = -Wall -Wextra -Werror -g3
INCLUDES = ./includes

# Libft
PATH_LIBFT = ./libft/
LIBFT = $(addprefix $(PATH_LIBFT), libft.a)

# FT_PRINTF
PATH_FT_PRINTF = ./ft_printf/
FT_PRINTF = $(addprefix $(PATH_FT_PRINTF), ftprintf.a)

# MINITALK
PATH_MANDATORY	=	./src/mandatory/
CLIENT_M	=	$(addprefix $(PATH_M), client.c)
SERVER_M	=	$(addprefix $(PATH_M), server.c)

PATH_BONUS	=	./src/bonus/
CLIENT_B	=	$(addprefix $(PATH_B), client.c)
SERVER_B	=	$(addprefix $(PATH_B), server.c)
SRC_BONUS = ./src/bonus/main_bonus.c \

# Objects
CLIENT_M_O	=	$(CLIENT_M:%.c=%.o)
SERVER_M_O	=	$(SERVER_M:%.c=%.o)

CLIENT_B_O	=	$(CLIENT_B:%.c=%.o)
SERVER_B_O	= 	$(SERVER_B:%.c=%.o)

# Color codes of output on terminal
PURPLE = \033[1;35m
WHITE = \033[1;37m
CYAN= \033[0;36m

# Default target to compile the mandatory part
all: $(NAME_MS) $(NAME_MC)

# Target to build the mandatory part
$(NAME_MC): $(CLIENT_M_O)
	@cp $(LIBFT) $(NAME_MC)
	@cp $(FT_PRINTF) $(NAME_MC)
	$(CC) $(CFLAGS) $< -I $(PATH_M) $(LIBFT) $(FT_PRINTF) -o $@
	@echo "$(PURPLE)--------------------------------------------------"
	@echo "$(PURPLE)The [$(CYAN)MINITALK_CLIENT$(PURPLE)] has been compiled! ðŸ¤ "
	@echo "$(PURPLE)--------------------------------------------------"

$(NAME_MS): $(SERVER_M_O)
	@cp $(LIBFT) $(NAME_MS)
	@cp $(FT_PRINTF) $(NAME_MS)
	$(CC) $(CFLAGS) $< -I $(PATH_M) $(LIBFT) $(FT_PRINTF) -o $@
	@echo "$(PURPLE)--------------------------------------------------"
	@echo "$(PURPLE)The [$(CYAN)MINITALK_SERVER$(PURPLE)] has been compiled! ðŸ¤ "
	@echo "$(PURPLE)--------------------------------------------------"

# Target to build the bonus part
bonus: $(LIBFT) $(FT_PRINTF) $(OBJ_BONUS)
	@rm -f $(OBJ)
	@rm -rf $(OBJ_PATH)
	@cp $(LIBFT) $(NAME)
	@cp $(FT_PRINTF) $(NAME)
	$(CC) $(OBJ_BONUS) $(LIBFT) $(FT_PRINTF) -L$(PATH_LIBFT) -L$(PATH_FT_PRINTF) -o $(NAME)
	@echo "$(PURPLE)--------------------------------------------------"
	@echo "$(PURPLE)The [$(CYAN)FDF_BONUS$(PURPLE)] has been compiled! ðŸ¤ "
	@echo "$(PURPLE)--------------------------------------------------"

# Builds dependencies
$(LIBFT):
	@make -C $(PATH_LIBFT)

$(FT_PRINTF):
	@make -C $(PATH_FT_PRINTF)

# Builds mandatory object files
$(OBJ_PATH)%.o: src/mandatory/%.c
	$(CC) $(CFLAGS) -c $< -o $@ -I $(dir $@)

# Builds bonus object files
$(OBJ_PATH_BONUS)%.o: src/bonus/%.c
	$(CC) $(CFLAGS) -c $< -o $@ -I $(dir $@)

# Cleans object files and dependencies
clean:
	@rm -f $(OBJ)
	@rm -f $(OBJ_BONUS)
	@rm -rf $(OBJ_PATH)
	@rm -rf $(OBJ_PATH_BONUS)
	@make clean -C $(PATH_LIBFT)
	@make clean -C $(PATH_FT_PRINTF)
	@echo "$(WHITE)-----------------------------------"
	@echo "$(WHITE)    Object files were cleaned!"
	@echo "$(WHITE)-----------------------------------"

# Cleans the executable file and pre-compiled header
fclean: clean
	@echo "$(WHITE)-----------------------------------"
	@echo "$(WHITE)        Cleaning all... ðŸ§¹"
	@echo "$(WHITE)-----------------------------------"
	@rm -f $(NAME_MC)
	@rm -f $(NAME_MS)
	@echo "$(WHITE)-----------------------------------"
	@echo "$(WHITE)    âœ¨ Cleaning complete! âœ¨"
	@echo "$(WHITE)-----------------------------------"

# Cleans everything generated by the Makefile and rebuild it all
re: fclean all

# Phony targets
.PHONY: all bonus clean fclean re