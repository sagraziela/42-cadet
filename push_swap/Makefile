# Name of the executable
NAME = push_swap

# Compilation flags
CFLAGS = -Wall -Wextra -Werror -g3

# Dependencies
PATH_LIBFT = ./libft/
LIBFT = ./libft/libft.a
TEST_LIB = $(shell test -f ./libft/libft.a && echo "yes" 2>&1)

# Push_swap mandatory
MANDATORY_PATH = ./src/
MANDATORY_SRC = ./src/push_swap.c
MANDATORY_OBJ = $(MANDATORY_SRC:%.c=%.o)
MANDATORY = push_swap.o
MANDATORY_CHECK = $(shell ar -t $(NAME) $(MANDATORY) 2>&1)
INCLUDES = ./includes

# Objects
OBJ_PATH = ./build/
OBJ = $(addprefix $(OBJ_PATH), $(notdir $(SRC:.c=.o)))

# Push_swap_bonus
# BONUS_PATH = ./bonus/
# BONUS_SRC = ./bonus/ft_printf_bonus.c \
# 			./bonus/handle_flags.c
# BONUS_OBJ = $(BONUS_SRC:%.c=%.o)
# BONUS = bonus/ft_printf_bonus.o
# BONUS_CHECK = $(shell ar -t $(NAME) $(BONUS) 2>&1)

# Color codes of output on terminal
PURPLE = \033[1;35m
WHITE = \033[1;37m
CYAN= \033[0;36m

# Default target to compile the mandatory part
all: libft $(NAME)

# target to build deps
libft:
	@if ! [ $(TEST_LIB) ]; then echo "$(CYAN)-*- Creating libft library. -*-$(WHITE)";fi
	@make -C $(PATH_LIBFT) --no-print-directory

# Target to build the mandatory part
$(NAME): $(LIBFT) $(MANDATORY_OBJ)
	@cp $(LIBFT) $(NAME)
	$(CC) $(MANDATORY_OBJ) $(LIBFT) -L$(PATH_LIBFT) -o $(NAME)
	@echo "$(PURPLE)--------------------------------------------------"
	@echo "$(PURPLE)The [$(CYAN)PUSH_SWAP$(PURPLE)] has been compiled! 🤠"
	@echo "$(PURPLE)--------------------------------------------------"

# Builds mandatory object files
$(OBJ_PATH)%.o:$(MANDATORY_PATH)%.c
	@mkdir -p $(OBJ_PATH)
	$(CC) $(CFLAGS) -c $< -o $@ c

# Target to build the bonus part
# bonus: $(LIBFT) $(BONUS_OBJ)
# 	@cp $(LIBFT) $(NAME)
# 	$(AR) $(NAME) $(BONUS_OBJ)
# 	@echo "$(PURPLE)--------------------------------------------------"
# 	@echo "$(PURPLE)The [$(CYAN)FT_PRINTF_BONUS$(PURPLE)] has been compiled! 🏅"
# 	@echo "$(PURPLE)--------------------------------------------------"

# Cleans object files and dependencies
clean:
	@rm -f $(MANDATORY_OBJ)
	@rm -f $(BONUS_OBJ)
	@make clean -C $(PATH_LIBFT)
	@echo "$(WHITE)-----------------------------------"
	@echo "$(WHITE)    Object files were cleaned!"
	@echo "$(WHITE)-----------------------------------"

# Cleans the executable file and pre-compiled header
fclean: clean
	@echo "$(WHITE)-----------------------------------"
	@echo "$(WHITE)        Cleaning all... 🧹"
	@echo "$(WHITE)-----------------------------------"
	@make fclean -C $(PATH_LIBFT)
	@rm -f $(NAME)
	@rm -f $(HD)*.gch
	@echo "$(WHITE)-----------------------------------"
	@echo "$(WHITE)    ✨ Cleaning complete! ✨"
	@echo "$(WHITE)-----------------------------------"

# Cleans everything generated by the Makefile and rebuild it all
re: fclean all

# Phony targets
.PHONY: all clean fclean re bonus libft