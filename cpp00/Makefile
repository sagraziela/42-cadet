# Name of the executable
NAME = cpp00

# Compilation flags
CPPFLAGS = c++ -Wall -Wextra -Werror -g -std=c++98
INCLUDES = -I ./includes/

SRC = ./src/main.cpp

# Objects
OBJ_PATH = src/build/
OBJ = $(addprefix $(OBJ_PATH), $(notdir $(SRC:.c=.o)))

# Default target to compile the mandatory part
all: $(NAME)

# Color codes of output on terminal
GREEN = \e[1;32m
WHITE = \033[1;37m
CYAN= \033[0;36m
END = \033[0m

# Target to build the mandatory part
$(NAME): $(OBJ)
	@ $(CPPFLAGS) $(OBJ) -o $@
	@echo "$(GREEN)--------------------------------------------------$(END)"
	@echo "$(GREEN)The [$(CYAN)CPP-00$(GREEN)] has been compiled! üßêü§îüìö$(END)"
	@echo "$(GREEN)--------------------------------------------------$(END)"

valgrind: all
	@echo "Running the program with valgrind..."
	valgrind --leak-check=full --show-leak-kinds=all --trace-children=yes --track-origins=yes ./philo 

run: all
	@echo "Running the program..."
	./philo


# Builds mandatory object files
$(OBJ_PATH)%.o: src/%.c
	@mkdir -p $(OBJ_PATH)
	$(CC) -c $(CFLAGS) $< -o $@ $(INCLUDES)

# Cleans object files and dependencies
clean:
	@rm -f $(OBJ)
	@rm -rf $(OBJ_PATH)
	@echo "$(WHITE)-----------------------------------$(END)"
	@echo "$(WHITE)    Object files were cleaned!$(END)"
	@echo "$(WHITE)-----------------------------------$(END)"

# Cleans the executable file and pre-compiled header
fclean: clean
	@echo "$(WHITE)-----------------------------------$(END)"
	@echo "$(WHITE)        Cleaning all... üßπ$(END)"
	@echo "$(WHITE)-----------------------------------$(END)"
	@rm -f $(NAME)
	@echo "$(WHITE)-----------------------------------$(END)"
	@echo "$(WHITE)    ‚ú® Cleaning complete! ‚ú®$(END)"
	@echo "$(WHITE)-----------------------------------$(END)"

# Cleans everything generated by the Makefile and rebuild it all
re: fclean all

# Phony targets
.PHONY: all clean fclean re run valgrind
